{"ast":null,"code":"import _classCallCheck from \"/Users/escher/triangle-type-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/escher/triangle-type-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n//TODO как обрабатывать ошибки, если в конструктор передается число <=0?\n//TODO конструктор, который принимает объект имплементирующий интерфейс ITriangle\n//TODO a,b,c наверное должны быть приватными, чтобы их не выставили в <=0?\n//TODO так как a,b,c не инты, их нельзя сравнивать через ===, надо учитывать погрешность...\n//test\nexport var TriangleType;\n\n(function (TriangleType) {\n  TriangleType[TriangleType[\"INVALID\"] = 0] = \"INVALID\";\n  TriangleType[TriangleType[\"EQUILATERAL\"] = 1] = \"EQUILATERAL\";\n  TriangleType[TriangleType[\"ISOSCELES\"] = 2] = \"ISOSCELES\";\n  TriangleType[TriangleType[\"SCALENE\"] = 3] = \"SCALENE\";\n})(TriangleType || (TriangleType = {}));\n\nexport var TriangleShape =\n/*#__PURE__*/\nfunction () {\n  function TriangleShape(a, b, c) {\n    _classCallCheck(this, TriangleShape);\n\n    this.a = a;\n    this.b = b;\n    this.c = c;\n  }\n\n  _createClass(TriangleShape, [{\n    key: \"getType\",\n    value: function getType() {\n      if (this.isInvalid()) {\n        return TriangleType.INVALID;\n      } else if (this.isEquilateral()) {\n        return TriangleType.EQUILATERAL;\n      } else if (this.isIsosceles()) {\n        return TriangleType.ISOSCELES;\n      }\n\n      return TriangleType.SCALENE;\n    }\n  }, {\n    key: \"isInvalid\",\n    value: function isInvalid() {\n      return this.isInvalidSides() || this.isImpossible();\n    }\n  }, {\n    key: \"isInvalidSides\",\n    value: function isInvalidSides() {\n      return this.a <= 0 || this.b <= 0 || this.c <= 0;\n    }\n  }, {\n    key: \"isImpossible\",\n    value: function isImpossible() {\n      return this.a >= this.b + this.c || this.c >= this.b + this.a || this.b >= this.a + this.c;\n    }\n  }, {\n    key: \"isEquilateral\",\n    value: function isEquilateral() {\n      return this.a === this.b && this.b === this.c;\n    }\n  }, {\n    key: \"isScalene\",\n    value: function isScalene() {\n      return this.a !== this.b && this.b !== this.c;\n    }\n  }, {\n    key: \"isIsosceles\",\n    value: function isIsosceles() {\n      return this.a === this.b && this.c !== this.a || this.b === this.c && this.a !== this.b || this.c === this.a && this.b !== this.c;\n    }\n  }]);\n\n  return TriangleShape;\n}();","map":{"version":3,"sources":["/Users/escher/triangle-type-react-app/src/triangle/Triangle.ts"],"names":["TriangleType","TriangleShape","a","b","c","isInvalid","INVALID","isEquilateral","EQUILATERAL","isIsosceles","ISOSCELES","SCALENE","isInvalidSides","isImpossible"],"mappings":";;AAeA;AACA;AACA;AACA;AACA;AAEA,WAAYA,YAAZ;;WAAYA,Y;AAAAA,EAAAA,Y,CAAAA,Y;AAAAA,EAAAA,Y,CAAAA,Y;AAAAA,EAAAA,Y,CAAAA,Y;AAAAA,EAAAA,Y,CAAAA,Y;GAAAA,Y,KAAAA,Y;;AAIZ,WAAaC,aAAb;AAAA;AAAA;AACI,yBAAmBC,CAAnB,EAAqCC,CAArC,EAAuDC,CAAvD,EAAkE;AAAA;;AAAA;AAAA;AAAA;AAAG;;AADzE;AAAA;AAAA,8BAG4B;AACpB,UAAI,KAAKC,SAAL,EAAJ,EAAsB;AAClB,eAAOL,YAAY,CAACM,OAApB;AACH,OAFD,MAEO,IAAI,KAAKC,aAAL,EAAJ,EAA0B;AAC7B,eAAOP,YAAY,CAACQ,WAApB;AACH,OAFM,MAEA,IAAI,KAAKC,WAAL,EAAJ,EAAwB;AAC3B,eAAOT,YAAY,CAACU,SAApB;AACH;;AAED,aAAOV,YAAY,CAACW,OAApB;AACH;AAbL;AAAA;AAAA,gCAeyB;AACjB,aAAO,KAAKC,cAAL,MAAyB,KAAKC,YAAL,EAAhC;AACH;AAjBL;AAAA;AAAA,qCAmB8B;AACtB,aAAO,KAAKX,CAAL,IAAU,CAAV,IAAe,KAAKC,CAAL,IAAU,CAAzB,IAA8B,KAAKC,CAAL,IAAU,CAA/C;AACH;AArBL;AAAA;AAAA,mCAuB4B;AACpB,aAAO,KAAKF,CAAL,IAAU,KAAKC,CAAL,GAAS,KAAKC,CAAxB,IACH,KAAKA,CAAL,IAAU,KAAKD,CAAL,GAAS,KAAKD,CADrB,IAEH,KAAKC,CAAL,IAAU,KAAKD,CAAL,GAAS,KAAKE,CAF5B;AAGH;AA3BL;AAAA;AAAA,oCA6B6B;AACrB,aAAO,KAAKF,CAAL,KAAW,KAAKC,CAAhB,IAAqB,KAAKA,CAAL,KAAW,KAAKC,CAA5C;AACH;AA/BL;AAAA;AAAA,gCAiCyB;AACjB,aAAO,KAAKF,CAAL,KAAW,KAAKC,CAAhB,IAAqB,KAAKA,CAAL,KAAW,KAAKC,CAA5C;AACH;AAnCL;AAAA;AAAA,kCAqC2B;AACnB,aACK,KAAKF,CAAL,KAAW,KAAKC,CAAhB,IAAqB,KAAKC,CAAL,KAAW,KAAKF,CAAtC,IACC,KAAKC,CAAL,KAAW,KAAKC,CAAhB,IAAqB,KAAKF,CAAL,KAAW,KAAKC,CADtC,IAEC,KAAKC,CAAL,KAAW,KAAKF,CAAhB,IAAqB,KAAKC,CAAL,KAAW,KAAKC,CAH1C;AAKH;AA3CL;;AAAA;AAAA","sourcesContent":["import { isError } from \"util\";\n\ninterface ITriangle {\n    a: number;\n    b: number;\n    c: number;\n}\n\ninterface ITriangleShape {\n    getType(): TriangleType;\n    isEquilateral(): boolean;\n    isScalene(): boolean;\n    isIsosceles(): boolean;\n}\n\n//TODO как обрабатывать ошибки, если в конструктор передается число <=0?\n//TODO конструктор, который принимает объект имплементирующий интерфейс ITriangle\n//TODO a,b,c наверное должны быть приватными, чтобы их не выставили в <=0?\n//TODO так как a,b,c не инты, их нельзя сравнивать через ===, надо учитывать погрешность...\n//test\n\nexport enum TriangleType {\n    INVALID, EQUILATERAL, ISOSCELES, SCALENE\n}\n\nexport class TriangleShape implements ITriangleShape, ITriangleShape {\n    constructor(public a: number, public b: number, public c: number) { }\n\n    getType(): TriangleType {\n        if (this.isInvalid()) {\n            return TriangleType.INVALID;\n        } else if (this.isEquilateral()) {\n            return TriangleType.EQUILATERAL;\n        } else if (this.isIsosceles()) {\n            return TriangleType.ISOSCELES;\n        }\n\n        return TriangleType.SCALENE;\n    }\n\n    isInvalid(): boolean {\n        return this.isInvalidSides() || this.isImpossible();\n    }\n\n    isInvalidSides(): boolean {\n        return this.a <= 0 || this.b <= 0 || this.c <= 0\n    }\n\n    isImpossible(): boolean {\n        return this.a >= this.b + this.c ||\n            this.c >= this.b + this.a ||\n            this.b >= this.a + this.c\n    }\n\n    isEquilateral(): boolean {\n        return this.a === this.b && this.b === this.c;\n    }\n\n    isScalene(): boolean {\n        return this.a !== this.b && this.b !== this.c;\n    }\n\n    isIsosceles(): boolean {\n        return (\n            (this.a === this.b && this.c !== this.a) ||\n            (this.b === this.c && this.a !== this.b) ||\n            (this.c === this.a && this.b !== this.c)\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}