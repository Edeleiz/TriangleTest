{"ast":null,"code":"import _classCallCheck from \"/Users/escher/triangle-type-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/escher/triangle-type-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/escher/triangle-type-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/escher/triangle-type-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/escher/triangle-type-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/escher/triangle-type-react-app/src/triangle/TriangleView.tsx\";\nimport * as React from \"react\";\nimport { Side } from \"./enum\";\n\nvar _default =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(_default, _React$Component);\n\n  function _default() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, _default);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(_default)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      info: ''\n    };\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"onCheckButtonClick\",\n    value: function onCheckButtonClick() {\n      this.props.model.commitSides();\n      var info = this.props.model.getTriangleTypes();\n      this.setState({\n        info: info\n      });\n    }\n  }, {\n    key: \"onKeyDown\",\n    value: function onKeyDown(e) {}\n  }, {\n    key: \"onSideChange\",\n    value: function onSideChange(side, value) {\n      console.log(\"on side change \" + side + \" val \" + value);\n      var parsed = parseFloat(value);\n\n      if (!isNaN(parsed)) {\n        this.setState({\n          info: \"\"\n        });\n        this.props.model.setSide(side, parsed);\n      } else {\n        //TODO show error\n        this.setState({\n          info: \"Invalid input\"\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col s12 m6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card blue-grey darken-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-content white-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Please input triangle sides:\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"side-a white-text\",\n        placeholder: \"a\",\n        onKeyDown: this.onKeyDown,\n        onChange: function onChange(e) {\n          _this2.onSideChange(Side.sideA, e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"side-b white-text\",\n        placeholder: \"b\",\n        onKeyDown: this.onKeyDown,\n        onChange: function onChange(e) {\n          _this2.onSideChange(Side.sideB, e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"side-c white-text\",\n        placeholder: \"c\",\n        onKeyDown: this.onKeyDown,\n        onChange: function onChange(e) {\n          _this2.onSideChange(Side.sideC, e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(\"a\", {\n        className: \"waves-effect waves-light btn\",\n        onClick: this.onCheckButtonClick.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Check\"), React.createElement(\"p\", {\n        className: \"white-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, this.state.info))))));\n    }\n  }]);\n\n  return _default;\n}(React.Component);\n\nexport { _default as default };","map":{"version":3,"sources":["/Users/escher/triangle-type-react-app/src/triangle/TriangleView.tsx"],"names":["React","Side","state","info","props","model","commitSides","getTriangleTypes","setState","e","side","value","console","log","parsed","parseFloat","isNaN","setSide","onKeyDown","onSideChange","sideA","target","sideB","sideC","onCheckButtonClick","bind","Component"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport TriangleModel from \"./TriangleModel\";\nimport { Side } from \"./enum\";\n\ntype State = {\n    info: string;\n}\n\ntype Props = {\n    model: TriangleModel\n}\n\nexport default class extends React.Component<Props, State> {\n    state: State = {\n        info: ''\n    }\n\n    onCheckButtonClick() {\n        this.props.model.commitSides();\n        var info = this.props.model.getTriangleTypes();\n        this.setState({ info })\n    }\n\n    onKeyDown(e: any) {\n\n    }\n\n    onSideChange(side: Side, value: string) {\n        console.log(\"on side change \" + side + \" val \" + value);\n        const parsed = parseFloat(value);\n        if (!isNaN(parsed)) {\n            this.setState({ info: \"\" })\n            this.props.model.setSide(side, parsed);\n        } else {\n            //TODO show error\n        this.setState({ info: \"Invalid input\" })\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"row\">\n                    <div className=\"col s12 m6\">\n                        <div className=\"card blue-grey darken-1\">\n                            <div className=\"card-content white-text\">\n                                <span className=\"card-title\">Please input triangle sides:</span>\n                                <input\n                                    type=\"text\"\n                                    className=\"side-a white-text\"\n                                    placeholder=\"a\"\n                                    onKeyDown={this.onKeyDown}\n                                    onChange={(e) => {\n                                        this.onSideChange(Side.sideA, e.target.value);\n                                    }}\n                                />\n                                <input\n                                    type=\"text\"\n                                    className=\"side-b white-text\"\n                                    placeholder=\"b\"\n                                    onKeyDown={this.onKeyDown}\n                                    onChange={(e) => {\n                                        this.onSideChange(Side.sideB, e.target.value);\n                                    }}\n                                />\n                                <input\n                                    type=\"text\"\n                                    className=\"side-c white-text\"\n                                    placeholder=\"c\"\n                                    onKeyDown={this.onKeyDown}\n                                    onChange={(e) => {\n                                        this.onSideChange(Side.sideC, e.target.value);\n                                    }}\n                                />\n                                <a className=\"waves-effect waves-light btn\" onClick={this.onCheckButtonClick.bind(this)}>Check</a>\n                                <p className=\"white-text\">{this.state.info}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}