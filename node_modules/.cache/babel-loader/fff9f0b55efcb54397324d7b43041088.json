{"ast":null,"code":"import _classCallCheck from \"/Users/escher/triangle-type-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/escher/triangle-type-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/escher/triangle-type-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/escher/triangle-type-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/escher/triangle-type-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/escher/triangle-type-react-app/src/triangle/TriangleView.tsx\";\nimport * as React from \"react\";\nimport BaseView from \"../base/BaseView\";\nimport { Side } from \"./enum\";\n\nvar _default =\n/*#__PURE__*/\nfunction (_BaseView) {\n  _inherits(_default, _BaseView);\n\n  function _default() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, _default);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(_default)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      info: ''\n    };\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"onCheckButtonClick\",\n    value: function onCheckButtonClick() {\n      var info = this.model.getTriangleType();\n      this.setState({\n        info: info\n      });\n    }\n  }, {\n    key: \"onKeyDown\",\n    value: function onKeyDown(e) {}\n  }, {\n    key: \"onSideChange\",\n    value: function onSideChange(side, value) {\n      console.log(\"on side change \" + side + \" val \" + value);\n      var parsed = parseFloat(value);\n\n      if (parsed) {\n        this.model.setSide(side, parsed);\n      } else {//TODO show error\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"side-a\",\n        placeholder: \"a\",\n        onKeyDown: this.onKeyDown,\n        onChange: function onChange(e) {\n          _this2.onSideChange(Side.sideA, e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"side-b\",\n        placeholder: \"b\",\n        onKeyDown: this.onKeyDown,\n        onChange: function onChange(e) {\n          _this2.onSideChange(Side.sideB, e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"side-c\",\n        placeholder: \"c\",\n        onKeyDown: this.onKeyDown,\n        onChange: function onChange(e) {\n          _this2.onSideChange(Side.sideC, e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.onCheckButtonClick.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Check\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, this.state.info));\n    }\n  }]);\n\n  return _default;\n}(BaseView);\n\nexport { _default as default };","map":{"version":3,"sources":["/Users/escher/triangle-type-react-app/src/triangle/TriangleView.tsx"],"names":["React","BaseView","Side","state","info","model","getTriangleType","setState","e","side","value","console","log","parsed","parseFloat","setSide","onKeyDown","onSideChange","sideA","target","sideB","sideC","onCheckButtonClick","bind"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AAEA,SAASC,IAAT,QAAqB,QAArB;;;;;;;;;;;;;;;;;;;UAOIC,K,GAAmB;AACfC,MAAAA,IAAI,EAAE;AADS,K;;;;;;yCAIE;AACjB,UAAIA,IAAI,GAAG,KAAKC,KAAL,CAAWC,eAAX,EAAX;AACA,WAAKC,QAAL,CAAc;AAAEH,QAAAA,IAAI,EAAJA;AAAF,OAAd;AACH;;;8BAESI,C,EAAQ,CAEjB;;;iCAEYC,I,EAAYC,K,EAAe;AACpCC,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoBH,IAApB,GAA2B,OAA3B,GAAqCC,KAAjD;AACA,UAAMG,MAAM,GAAGC,UAAU,CAACJ,KAAD,CAAzB;;AACA,UAAIG,MAAJ,EAAY;AACR,aAAKR,KAAL,CAAWU,OAAX,CAAmBN,IAAnB,EAAyBI,MAAzB;AACH,OAFD,MAEO,CACH;AACH;AACJ;;;6BAEQ;AAAA;;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,SAAS,EAAC,QAFd;AAGI,QAAA,WAAW,EAAC,GAHhB;AAII,QAAA,SAAS,EAAE,KAAKG,SAJpB;AAKI,QAAA,QAAQ,EAAE,kBAACR,CAAD,EAAO;AACb,UAAA,MAAI,CAACS,YAAL,CAAkBf,IAAI,CAACgB,KAAvB,EAA8BV,CAAC,CAACW,MAAF,CAAST,KAAvC;AACH,SAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAUI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,SAAS,EAAC,QAFd;AAGI,QAAA,WAAW,EAAC,GAHhB;AAII,QAAA,SAAS,EAAE,KAAKM,SAJpB;AAKI,QAAA,QAAQ,EAAE,kBAACR,CAAD,EAAO;AACb,UAAA,MAAI,CAACS,YAAL,CAAkBf,IAAI,CAACkB,KAAvB,EAA8BZ,CAAC,CAACW,MAAF,CAAST,KAAvC;AACH,SAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVJ,EAmBI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,SAAS,EAAC,QAFd;AAGI,QAAA,WAAW,EAAC,GAHhB;AAII,QAAA,SAAS,EAAE,KAAKM,SAJpB;AAKI,QAAA,QAAQ,EAAE,kBAACR,CAAD,EAAO;AACb,UAAA,MAAI,CAACS,YAAL,CAAkBf,IAAI,CAACmB,KAAvB,EAA8Bb,CAAC,CAACW,MAAF,CAAST,KAAvC;AACH,SAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnBJ,EA6BI;AAAQ,QAAA,OAAO,EAAE,KAAKY,kBAAL,CAAwBC,IAAxB,CAA6B,IAA7B,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBA7BJ,EA+BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKpB,KAAL,CAAWC,IAAf,CA/BJ,CADJ;AAmCH;;;;EA5DwBH,Q","sourcesContent":["import * as React from \"react\";\nimport BaseView from \"../base/BaseView\";\nimport TriangleModel from \"./TriangleModel\";\nimport { Side } from \"./enum\";\n\ntype ViewState = {\n    info: string;\n}\n\nexport default class extends BaseView<TriangleModel, any> {\n    state: ViewState = {\n        info: ''\n    }\n\n    onCheckButtonClick() {\n        var info = this.model.getTriangleType();\n        this.setState({ info })\n    }\n\n    onKeyDown(e: any) {\n\n    }\n\n    onSideChange(side: Side, value: string) {\n        console.log(\"on side change \" + side + \" val \" + value);\n        const parsed = parseFloat(value);\n        if (parsed) {\n            this.model.setSide(side, parsed);\n        } else {\n            //TODO show error\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <input\n                    type=\"text\"\n                    className=\"side-a\"\n                    placeholder=\"a\"\n                    onKeyDown={this.onKeyDown}\n                    onChange={(e) => {\n                        this.onSideChange(Side.sideA, e.target.value);\n                    }}\n                />\n                <input\n                    type=\"text\"\n                    className=\"side-b\"\n                    placeholder=\"b\"\n                    onKeyDown={this.onKeyDown}\n                    onChange={(e) => {\n                        this.onSideChange(Side.sideB, e.target.value);\n                    }}\n                />\n                <input\n                    type=\"text\"\n                    className=\"side-c\"\n                    placeholder=\"c\"\n                    onKeyDown={this.onKeyDown}\n                    onChange={(e) => {\n                        this.onSideChange(Side.sideC, e.target.value);\n                    }}\n                />\n\n                <button onClick={this.onCheckButtonClick.bind(this)}>Check</button>\n\n                <p>{this.state.info}</p>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}